(window.webpackJsonp=window.webpackJsonp||[]).push([[32],{309:function(t,s,a){"use strict";a.r(s);var n=a(10),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"为什么使用-commonregex"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#为什么使用-commonregex"}},[t._v("#")]),t._v(" 为什么使用 commonregex?")]),t._v(" "),a("p",[t._v("在开发的时候，我们会遇到一些需要使用字符串的匹配和查找的任务。我们可以使用正则表达式去提取感兴趣的数据，如手机号码，邮件，超链接等。但是正则表达式写起来费时费力，而且容易遗忘。"),a("code",[t._v("commonregex")]),t._v(" 它提供了很多内置的正则表达式，开箱即用，能极大的提高开发体验和开发效率。")]),t._v(" "),a("h2",{attrs:{id:"commonregex-简介"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#commonregex-简介"}},[t._v("#")]),t._v(" commonregex 简介")]),t._v(" "),a("p",[t._v("提供经常使用的正则表达式的集合。")]),t._v(" "),a("p",[t._v("它提供了这些作为获取与特定模式对应的匹配字符串的简单函数。")]),t._v(" "),a("ul",[a("li",[t._v("日期")]),t._v(" "),a("li",[t._v("时间")]),t._v(" "),a("li",[t._v("电话号码")]),t._v(" "),a("li",[t._v("超链接")]),t._v(" "),a("li",[t._v("邮件地址")]),t._v(" "),a("li",[t._v("IPv4/IPv6/IP 地址")]),t._v(" "),a("li",[t._v("价格")]),t._v(" "),a("li",[t._v("十六进制颜色值")]),t._v(" "),a("li",[t._v("信用卡卡号")]),t._v(" "),a("li",[t._v("10/13 位 ISBN")]),t._v(" "),a("li",[t._v("邮政编码")]),t._v(" "),a("li",[t._v("MD5")]),t._v(" "),a("li",[t._v("SHA1")]),t._v(" "),a("li",[t._v("SHA256")]),t._v(" "),a("li",[t._v("GUID，全局唯一标识")]),t._v(" "),a("li",[t._v("Git 仓库地址")])]),t._v(" "),a("h2",{attrs:{id:"快速使用-commonregex"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#快速使用-commonregex"}},[t._v("#")]),t._v(" 快速使用 commonregex")]),t._v(" "),a("h3",{attrs:{id:"安装-commonregex"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#安装-commonregex"}},[t._v("#")]),t._v(" 安装 commonregex")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("go get "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-u")]),t._v(" github.com/mingrammer/commonregex\n")])])]),a("h3",{attrs:{id:"简单使用-commonregex"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#简单使用-commonregex"}},[t._v("#")]),t._v(" 简单使用 commonregex")]),t._v(" "),a("div",{staticClass:"language-go extra-class"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("package")]),t._v(" main\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"fmt"')]),t._v("\n\n  cregex "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"github.com/mingrammer/commonregex"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  text "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("`John, please get that article on www.linkedin.com to me by 5:00PM on Jan 9th 2012. 4:00 would be ideal, actually. If you have any questions, You can reach me at (519)-236-2723x341 or get in touch with my associate at harold.smith@gmail.com`")]),t._v("\n\n  dateList "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" cregex"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Date")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("text"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  timeList "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" cregex"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Time")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("text"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  linkList "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" cregex"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Links")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("text"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  phoneList "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" cregex"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("PhonesWithExts")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("text"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  emailList "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" cregex"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Emails")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("text"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n  fmt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"date list:"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" dateList"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  fmt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"time list:"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" timeList"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  fmt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"link list:"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" linkList"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  fmt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"phone list:"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" phoneList"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  fmt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"email list:"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" emailList"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("运行结果")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("date")]),t._v(" list: "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("Jan 9th "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2012")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("time")]),t._v(" list: "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v(":00PM "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v(":00 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("link")]),t._v(" list: "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("www.linkedin.com harold.smith@gmail.com"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\nphone list: "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("519")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("-236-2723x341"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\nemail list: "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("harold.smith@gmail.com"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),a("p",[a("code",[t._v("commonregex")]),t._v("提供的 API 非常易于使用，调用相应的类别方法返回一段文本中符合这些格式的字符串列表。")]),t._v(" "),a("p",[t._v("上面依次从"),a("code",[t._v("text")]),t._v("获取"),a("strong",[t._v("日期列表")]),t._v("，"),a("strong",[t._v("时间列表")]),t._v("，"),a("strong",[t._v("超链接列表")]),t._v("，"),a("strong",[t._v("电话号码列表")]),t._v("和"),a("strong",[t._v("电子邮件列表")]),t._v("。")]),t._v(" "),a("h2",{attrs:{id:"总结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),a("p",[a("code",[t._v("commonregex")]),t._v(" 提供了常用的正则表达式的函数，足以应付我们日常开发场景，能较大的提高我们的开发效率。")]),t._v(" "),a("h2",{attrs:{id:"参考资料"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参考资料"}},[t._v("#")]),t._v(" 参考资料")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://github.com/mingrammer/commonregex",target:"_blank",rel:"noopener noreferrer"}},[t._v("mingrammer/commonregex"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://darjun.github.io/2020/09/05/godailylib/commonregex",target:"_blank",rel:"noopener noreferrer"}},[t._v("godailylib/commonregex"),a("OutboundLink")],1)])])])}),[],!1,null,null,null);s.default=e.exports}}]);